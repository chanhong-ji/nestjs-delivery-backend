# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Int!
  updatedAt: DateTime!
  createdAt: DateTime!
  name: String!
  restaurants: [Restaurant!]!
  restaurantCount: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Restaurant {
  id: Int!
  updatedAt: DateTime!
  createdAt: DateTime!
  name: String!
  coverImage: String
  address: String!
  category: Category
  user: User!
}

type User {
  id: Int!
  updatedAt: DateTime!
  createdAt: DateTime!
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurants: [Restaurant!]!
}

enum UserRole {
  Client
  Owner
  Delivery
}

type CreateAccountOutput {
  ok: Boolean!
  error: String
}

type LoginOutPut {
  ok: Boolean!
  error: String
  token: String
}

type PublicUser {
  id: Int!
  email: String!
  role: UserRole!
}

type UserProfileOutput {
  ok: Boolean!
  error: String
  user: PublicUser
}

type EditProfileOutput {
  ok: Boolean!
  error: String
  user: User
}

type VerifyCodeOutput {
  ok: Boolean!
  error: String
}

type CreateRestaurantOutput {
  ok: Boolean!
  error: String
}

type CreateCategoryOutput {
  ok: Boolean!
  error: String
}

type EditRestaurantOutput {
  ok: Boolean!
  error: String
}

type DeleteRestaurantOutput {
  ok: Boolean!
  error: String
}

type RestaurantOutput {
  ok: Boolean!
  error: String
  restaurant: Restaurant
}

type RestaurantsOutput {
  ok: Boolean!
  error: String
  totalPages: Float
  totalItems: Float
  result: [Restaurant!]!
}

type SeeCategoriesOutput {
  ok: Boolean!
  error: String
  categories: [Category!]!
}

type SearchRestaurantOutput {
  ok: Boolean!
  error: String
  totalPages: Float
  totalItems: Float
  result: [Restaurant!]
}

type Query {
  me: User!
  userProfile(userId: Float!): UserProfileOutput!
  restaurant(id: Int!): RestaurantOutput!
  restaurants(page: Float! = 1, categoryId: Float!): RestaurantsOutput!
  searchRestaurant(page: Float! = 1, query: String!): SearchRestaurantOutput!
  seeCategories: SeeCategoriesOutput!
}

type Mutation {
  createAccount(email: String!, password: String!, role: UserRole!): CreateAccountOutput!
  login(email: String!, password: String!): LoginOutPut!
  editProfile(email: String, password: String, role: UserRole): EditProfileOutput!
  verifyEmailwithCode(code: String!): VerifyCodeOutput!
  createRestaurant(name: String!, coverImage: String, address: String!, categoryId: Float!): CreateRestaurantOutput!
  editRestaurant(name: String, coverImage: String, address: String, categoryId: Float, restaurantId: Float!): EditRestaurantOutput!
  deleteRestaurant(id: Int!): DeleteRestaurantOutput!
  createCategory(name: String!): CreateCategoryOutput!
}